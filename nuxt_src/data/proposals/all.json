[
  {
    "id": "J1647653100",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": ""
        },
        "other_url": "https://gakuzzzz.github.io/slides/abstract_type_member_introduction/"
      },
      "youtube_embed_url": "//youtu.be/TJ5Ud7USEaU",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Introduce Abstract Type Members",
      "detail": "In Scala, there is a language feature named Abstract Type Members.\nHowever, because of features that do not exist in Java, Kotlin, C#, etc., and because some of the problems that can be solved with Generics are covered, Abstract Type Members are not used even in situations where it is better to use them.\nIn this session, we will explain what Abstract Type Members are, how they are useful, and how they can be used in different ways from Generics, so that you can start using them tomorrow.",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "NAKAMURA Manabu",
          "id": "gakuzzzz",
          "icon": "https://pbs.twimg.com/profile_images/1431608839/ceb5e4f7-bec8-4a68-a86c-32d0c7ae4e22_400x400.png",
          "organization": "(株)Tech to Value, (株)エフ・コード",
          "speaker_experience": [],
          "contributes": ["https://github.com/t2v/holidays", "", "https: //github.com/gakuzzzz/nullable-quantifier"],
          "github": "gakuzzzz",
          "twitter": "gakuzzzz",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Abstract Type Members 入門",
      "detail": "Scala には Abstract Type Members(抽象型メンバー) と呼ばれる言語機能があります。\nしかし、Java や Kotlin, C# などには存在しない機能だったり、Generics と解決できる問題の領域が近かったりすることから、Abstract Type Members を利用した方が良い場面でも活用されていないことがあります。\nこのセッションでは、Abstract Type Members とはどんな機能でどんな役に立つのか、Generics との使い分け等について解説し、明日から使えるようにします。",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "NAKAMURA Manabu",
          "id": "gakuzzzz",
          "icon": "https://pbs.twimg.com/profile_images/1431608839/ceb5e4f7-bec8-4a68-a86c-32d0c7ae4e22_400x400.png",
          "organization": "(株)Tech to Value, (株)エフ・コード",
          "speaker_experience": [],
          "contributes": ["https://github.com/t2v/holidays", "", "https: //github.com/gakuzzzz/nullable-quantifier"],
          "github": "gakuzzzz",
          "twitter": "gakuzzzz",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "E1647654600",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": ""
        },
        "other_url": "https://github.com/ghostdogpr/mtl-benchmarks/blob/master/beautiful-domain-logic.pdf"
      },
      "youtube_embed_url": "https://youtu.be/TVYhFpqlgZ4",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Beautiful Domain Logic",
      "detail": "While building a game called Cookie Run: Kingdom, we've explored various options for implementing game rules using the Event Sourcing pattern. This talk will introduce several solutions for creating \"beautiful\" domain logic programs and cover their respective strengths and weaknesses.",
      "language": "English",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Pierre Ricadat",
          "icon": "https://avatars.githubusercontent.com/u/7413894?v=4",
          "organization": "Server Engineer at Devsisters",
          "speaker_experience": [],
          "contributes": ["Caliban, ZIO"],
          "github": "ghostdogpr",
          "twitter": "ghostdogpr",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "美しいドメインロジック",
      "detail": "Cookie Run: Kingdom というゲームを制作する中で、Event Sourcing パターンを使ってゲームのルールを実装するさまざまな方法を模索しました。\n本セッションでは、「美しい」ドメインロジックを作るいくつかのソリューションを紹介し、それぞれの長所と短所を考察していきます。",
      "language": "English",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Pierre Ricadat",
          "icon": "https://avatars.githubusercontent.com/u/7413894?v=4",
          "organization": "Server Engineer at Devsisters",
          "speaker_experience": [],
          "contributes": ["Caliban, ZIO"],
          "github": "ghostdogpr",
          "twitter": "ghostdogpr",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "J1647656700",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": "4f21c283621747cd8fb9850554381bf7"
        }
      },
      "youtube_embed_url": "https://youtu.be/jSvwFxUqS5U",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Tuples and Mirrors in Scala3 and Higher-kinded data",
      "detail": "The Tuple type went through a reimplementation in Scala 3 into something very powerful.\nWith the newly added mechanism called Mirror, we can now handle algebraic datatypes in a uniform manner.\nThe use of these techniques enables an extremely powerful abstraction known as Higher-kinded data (HKD).\nIn this session, I will illustrate how HKD are realized in Scala 3, and what their applications can be.",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "@phenan",
          "icon": "https://pbs.twimg.com/profile_images/663178783/enemy4_400x400.png",
          "organization": "LINE株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "phenan",
          "twitter": "phenan",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Scala3のTupleとMirrorとHigher-kinded data",
      "detail": "Scala3ではTuple型が再実装され、非常に強力になりました。\nまた、新しくMirrorという仕組みを手に入れたことで、代数的データ型を統一的に扱う手法を手に入れました。\nこれらの仕組みを利用することで、Higher-kinded data(HKD)と呼ばれる非常に強力な抽象化を行うことが可能となります。\n本セッションでは、HKDおよびその実現方法とその応用について解説します。",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "@phenan",
          "icon": "https://pbs.twimg.com/profile_images/663178783/enemy4_400x400.png",
          "organization": "LINE株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "phenan",
          "twitter": "phenan",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "J1647658800",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": "2bd308ced55a497684a99368950f194a"
        }
      },
      "youtube_embed_url": "https://youtu.be/vSa8buPSQkk",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Purely Functional Programming with Cats Effect 3 and Scala 3",
      "detail": "Cats Effect is a library for purely functional style programming in Scala.\nIn this talk, I will discuss why this library is useful, whether it's possible to do purely functional style programming in Scala, and how it can interoperate with Java's mutable API.",
      "language": "Japanese",
      "length": 40,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Toshiyuki Takahashi",
          "icon": "https://secure.gravatar.com/avatar/405ad7da1defc0f6f8804e026778038f",
          "organization": "",
          "speaker_experience": [],
          "contributes": ["flyway/flyway-play, tototoshi/scala-csv, playframework/playframework"],
          "github": "tototoshi",
          "twitter": "tototoshi",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Cats Effect 3とScala 3による純粋関数型プログラミング",
      "detail": "Cats EffectはScalaで純粋関数型スタイルのプログラミングを行うためのライブラリです。\nなぜこのライブラリが便利なのか、Scalaで純粋関数型スタイルを貫くことは可能なのか、JavaのミュータブルなAPIとの相互運用はどうすべきか、などの疑問について実用的なライブラリ制作を例としながら議論します。",
      "language": "Japanese",
      "length": 40,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Toshiyuki Takahashi",
          "icon": "https://secure.gravatar.com/avatar/405ad7da1defc0f6f8804e026778038f",
          "organization": "",
          "speaker_experience": [],
          "contributes": ["flyway/flyway-play, tototoshi/scala-csv, playframework/playframework"],
          "github": "tototoshi",
          "twitter": "tototoshi",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "E1647663000",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": ""
        },
        "other_url": "https://drive.google.com/file/d/1KcH7orpj0K_9B-CEG979-MoC9tqbyFrz/view?usp=sharing"
      },
      "youtube_embed_url": "https://youtu.be/ulpuCpWfJNY",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Introducing Quine: a Streaming Graph for Modern Data Pipelines",
      "detail": "This talk will introduce Quine: a brand new and freely available \"steaming graph interpreter\" meant as a new fundamental infrastructure component to address major challenges in data engineering and simplify enterprise data pipelines.",
      "language": "English",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Ryan Wright",
          "icon": "http://2.gravatar.com/avatar/e09b083ecc20bb306f371a0216a5c889",
          "organization": "Founder & CEO at thatDot, Inc.",
          "speaker_experience": [],
          "contributes": [
            "quine.io  -  this will be released in mid-February as completely free/open software. It is written entirely in Scala, and is the focus of this talk."
          ],
          "github": "rrwright",
          "twitter": "rrwright",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Quine: モダンなデータパイプラインのためのストリーム化グラフ",
      "detail": "本セッションでは、新登場した Quine を紹介します。\nQuine は、無料で使える「ストリーム化されたグラフのインタープリタ」で、今後のデータ・エンジニアリングにおける大きな課題に立ち向かうための基礎インフラ・コンポーネントとなることを意図しており、エンタープライズにけるデータ・パイプラインをシンプルにさせることを狙っています。",
      "language": "English",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Ryan Wright",
          "icon": "http://2.gravatar.com/avatar/e09b083ecc20bb306f371a0216a5c889",
          "organization": "Founder & CEO at thatDot, Inc.",
          "speaker_experience": [],
          "contributes": [
            "quine.io  -  this will be released in mid-February as completely free/open software. It is written entirely in Scala, and is the focus of this talk."
          ],
          "github": "rrwright",
          "twitter": "rrwright",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "J1647664500",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": ""
        },
        "other_url": "https://eed3si9n.com/bazel101/"
      },
      "youtube_embed_url": "https://youtu.be/MDS28UYDSe0",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Intro to Bazel",
      "detail": "Bazel is a build tool originally developed as an in-house build tool for Google, and later open sourced. Let's get started with Bazel as it is increasing adoption among some of the Scala companies.\nEugene is a member of Build team at Twitter, implementing Bazel migration.",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Eugene Yokota",
          "icon": "https://pbs.twimg.com/profile_images/1433141732930109446/1chynLaI_400x400.jpg",
          "organization": "Twitter",
          "speaker_experience": [],
          "contributes": ["sbt, scopt"],
          "github": "eed3si9n",
          "twitter": "eed3si9n",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Bazel 入門",
      "detail": "Google が社内用のビルドツールとして開発し、後にオープンソース化された Bazel。徐々に Scala での採用例も増えてきている今、Bazel に入門してみましょう。\nTwitter社ビルドチームで  Bazel 移行を担当している Yokota が Bazel の実際を解説します。",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Eugene Yokota",
          "icon": "https://pbs.twimg.com/profile_images/1433141732930109446/1chynLaI_400x400.jpg",
          "organization": "Twitter",
          "speaker_experience": [],
          "contributes": ["sbt, scopt"],
          "github": "eed3si9n",
          "twitter": "eed3si9n",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "J1647666600",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": "ea4f7d9eb6964928b9ed16674e5090c9"
        }
      },
      "youtube_embed_url": "https://youtu.be/N0POoc6LkJc",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Pattern of Implement Domain Object with Akka Persistence Typed",
      "detail": "Akka Persistence Typed is a powerful tool for Event Sourcing, but it has a restriction that CommandHandlers and EventHandlers must be implemented separately, which affects the implementation of Domain Objects.\nIn this session, I will introduce an implementation pattern within this constraint.",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "TSUJI Yohei",
          "id": "crossroad0201",
          "icon": "https://pbs.twimg.com/profile_images/1236925246/crossroad0201_400x400.jpg",
          "organization": "Chatwork株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "crossroad0201",
          "twitter": "crossroad0201",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "Akka Persistence Typedにおけるドメインオブジェクトの実装パターン",
      "detail": "Akka Persistence Typedはイベントソーシングを実現する強力なツールですが、コマンドハンドラとイベントハンドラを分けて実装しなければならない制約があり、ドメインオブジェクトの実装にも影響を与えます。\nこのセッションでは、その制約の中でできるだけスマートにドメインオブジェクトを実装するために試した実装パターンをご紹介します。",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "TSUJI Yohei",
          "id": "crossroad0201",
          "icon": "https://pbs.twimg.com/profile_images/1236925246/crossroad0201_400x400.jpg",
          "organization": "Chatwork株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "crossroad0201",
          "twitter": "crossroad0201",
          "other_sns": ""
        }
      ]
    }
  },
  {
    "id": "J1647668100",
    "isAdopted": true,
    "artifacts": {
      "slides": {
        "speakerdeck": {
          "data_id": "194c009daef94589b2ce5251adbbd234"
        }
      },
      "youtube_embed_url": "https://youtu.be/SdNs5ZrbSqc",
      "youtube_embed_url_2": ""
    },
    "en": {
      "title": "Alp-original Eff pearls",
      "detail": "Now in its fourth year at Alp, Inc, Eff has been in continuous use since the startup's foundation.\nIn this talk, I will introduce our original Effects that originated from practical needs, and those we envision in the future.",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Tsubasa Matsukawa",
          "icon": "https://en.gravatar.com/userimage/43626898/23eb203df81ebe5097a33a3133c65df0.jpeg",
          "organization": "アルプ株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "ma2k8",
          "twitter": "wing_007",
          "other_sns": ""
        }
      ]
    },
    "ja": {
      "title": "AlpのEff独自Effect集",
      "detail": "創業4年目になるスタートアップAlp株式会社で、創業時からEffを導入し利用している中で生まれた独自Effectの紹介と、今後作りたいEffectについて発表します。",
      "language": "Japanese",
      "length": 20,
      "tags": [],
      "keywords": [],
      "speakers": [
        {
          "name": "Tsubasa Matsukawa",
          "icon": "https://en.gravatar.com/userimage/43626898/23eb203df81ebe5097a33a3133c65df0.jpeg",
          "organization": "アルプ株式会社",
          "speaker_experience": [],
          "contributes": [],
          "github": "ma2k8",
          "twitter": "wing_007",
          "other_sns": ""
        }
      ]
    }
  }
]
